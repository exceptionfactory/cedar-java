<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.cedarpolicy</groupId>
    <artifactId>cedar-java</artifactId>
    <version>3.0.1-1</version>

    <properties>
        <maven.compiler.release>17</maven.compiler.release>
        <foreignFunctionModulePath>../CedarJavaFFI</foreignFunctionModulePath>
        <foreignFunctionLibraryName>libcedar_java_ffi</foreignFunctionLibraryName>
        <aarch64AppleTarget>aarch64-apple-darwin</aarch64AppleTarget>
        <aarch64AppleOutputDirectory>${project.build.outputDirectory}/jne/macos/aarch64</aarch64AppleOutputDirectory>
        <aarch64LinuxTarget>aarch64-unknown-linux-gnu</aarch64LinuxTarget>
        <aarch64LinuxOutputDirectory>${project.build.outputDirectory}/jne/linux/aarch64</aarch64LinuxOutputDirectory>
        <amd64LinuxTarget>x86_64-unknown-linux-gnu</amd64LinuxTarget>
        <amd64LinuxOutputDirectory>${project.build.outputDirectory}/jne/linux/amd64</amd64LinuxOutputDirectory>
        <distributionOwner>cedarpolicy</distributionOwner>
    </properties>

    <distributionManagement>
        <repository>
            <id>github</id>
            <name>GitHub</name>
            <url>https://maven.pkg.github.com/${distributionOwner}/cedar-java</url>
        </repository>
    </distributionManagement>

    <dependencies>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>2.0.11</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.16.1</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jdk8</artifactId>
            <version>2.16.1</version>
        </dependency>
        <dependency>
            <groupId>com.fizzed</groupId>
            <artifactId>jne</artifactId>
            <version>4.1.1</version>
        </dependency>
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>findbugs</artifactId>
            <version>3.0.1</version>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>5.10.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-engine</artifactId>
            <version>1.10.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>5.9.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <version>5.9.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>net.jqwik</groupId>
            <artifactId>jqwik</artifactId>
            <version>1.7.4</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>3.1.1</version>
                <executions>
                    <execution>
                        <id>cargo-build</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>cargo</executable>
                            <arguments>
                                <argument>build</argument>
                                <argument>--release</argument>
                                <argument>--target=${aarch64AppleTarget}</argument>
                                <argument>--manifest-path</argument>
                                <argument>${foreignFunctionModulePath}/Cargo.toml</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create-target-directory-aarch64</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>mkdir</executable>
                            <arguments>
                                <argument>-p</argument>
                                <argument>${aarch64AppleOutputDirectory}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-release-library-aarch64</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>cp</executable>
                            <arguments>
                                <argument>${foreignFunctionModulePath}/target/${aarch64AppleTarget}/release/${foreignFunctionLibraryName}.dylib</argument>
                                <argument>${aarch64AppleOutputDirectory}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>cargo-install-zigbuild</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>cargo</executable>
                            <arguments>
                                <argument>install</argument>
                                <argument>cargo-zigbuild</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>cargo-zigbuild</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>cargo</executable>
                            <arguments>
                                <argument>zigbuild</argument>
                                <argument>--release</argument>
                                <argument>--target=${amd64LinuxTarget}</argument>
                                <argument>--manifest-path</argument>
                                <argument>${foreignFunctionModulePath}/Cargo.toml</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create-target-directory-amd64</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>mkdir</executable>
                            <arguments>
                                <argument>-p</argument>
                                <argument>${amd64LinuxOutputDirectory}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-release-library-amd64</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>cp</executable>
                            <arguments>
                                <argument>${foreignFunctionModulePath}/target/${amd64LinuxTarget}/release/${foreignFunctionLibraryName}.so</argument>
                                <argument>${amd64LinuxOutputDirectory}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>cargo-zigbuild-aarch64-linux</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>cargo</executable>
                            <arguments>
                                <argument>zigbuild</argument>
                                <argument>--release</argument>
                                <argument>--target=${aarch64LinuxTarget}</argument>
                                <argument>--manifest-path</argument>
                                <argument>${foreignFunctionModulePath}/Cargo.toml</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>create-target-directory-aarch64-linux</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>mkdir</executable>
                            <arguments>
                                <argument>-p</argument>
                                <argument>${aarch64LinuxOutputDirectory}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-release-library-aarch64-linux</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                        <configuration>
                            <executable>cp</executable>
                            <arguments>
                                <argument>${foreignFunctionModulePath}/target/${aarch64LinuxTarget}/release/${foreignFunctionLibraryName}.so</argument>
                                <argument>${aarch64LinuxOutputDirectory}</argument>
                            </arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
